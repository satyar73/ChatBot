# Docker Compose configuration

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatbot-backend
    volumes:
      - ./data:/app/data
      - ./test_results:/app/test_results
      - ./.env:/app/.env
      - /Users/satyaramachandran/credentials:/app/credentials
    environment:
      - ENVIRONMENT=${MODE:-production}
      - COMPANY_NAME=${COMPANY_NAME:-SVV}
    networks:
      - chatbot-network
    # Command is defined in the Dockerfile but can be overridden
    # Use MODE=debug docker-compose up to start in debug mode
    command: ${DEBUG_CMD:-uvicorn app.main:app --host 0.0.0.0 --port 8005}
    # Expose to host for direct API testing if needed
    ports:
      - "8005:8005"
    profiles:
      - default
      # Exclude from debug profile to avoid port conflicts
      # This prevents backend and backend-debug from starting together
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # Debug configuration that mounts app code for live reloading
  backend-debug:
    profiles: ["debug"]
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chatbot-backend-debug
    # Use the hostname 'backend' so the frontend can find it
    hostname: backend
    volumes:
      - ./data:/app/data
      - ./test_results:/app/test_results
      - ./.env.docker:/app/.env
      - ./app:/app/app  # Mount app directory for live code changes
      - /Users/satyaramachandran/credentials:/app/credentials
    environment:
      - ENVIRONMENT=development
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - COMPANY_NAME=${COMPANY_NAME:-SVV}
    command: uvicorn app.main:app --host 0.0.0.0 --port 8005 --reload --log-level info
    networks:
      - chatbot-network
    ports:
      - "8005:8005"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatbot-frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - chatbot-network
    # extra_hosts not needed for AWS ECS deployment
    # Define environment variable for backend service discovery
    environment:
      - BACKEND_SERVICE_HOST=backend
      - REACT_APP_COMPANY_NAME=${COMPANY_NAME:-SVV}
    restart: unless-stopped
    # When using debug profile, make sure we depend on backend-debug instead
    profiles:
      - default
      
  # Debug version of frontend to work with backend-debug
  frontend-debug:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatbot-frontend-debug
    ports:
      - "3000:80"
    depends_on:
      backend-debug:
        condition: service_healthy
    networks:
      - chatbot-network
    # extra_hosts not needed for AWS ECS deployment
    # Define environment variable for backend service discovery
    environment:
      - BACKEND_SERVICE_HOST=backend-debug
      - REACT_APP_COMPANY_NAME=${COMPANY_NAME:-SVV}
    restart: unless-stopped
    profiles:
      - debug

networks:
  chatbot-network:
    driver: bridge

volumes:
  data:
    driver: local
